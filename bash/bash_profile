#!/usr/bin/env bash
# Main bash environment setup file

# TODO:
#   organize and cleanup
#   Change any instances of my username
# TODO: set CDPATH
#       see 'builtin cd --help for more'
# TODO: use 'bash --rcfile file' to force bash to only source specific files at startup
# TODO: set settings based on login shell and/or interactive shell
# TODO: check if files have already been sourced. Make some sort of '#ifndef' check - oh but this could stop the 'reload' function from making any changes
# TODO: add include guards like this:
#    if [[ "${__bp_imported:-}" == "defined" ]]; then
#        return 0
#    fi
#    __bp_imported="defined"
#
#
# TODO: have some things that take longer run in the background with '&'. Be careful with subshells though! We dont want to set the subshell's environment

# Source order: OS, aliases, functions, python environment, color utilities

# Prompt - TODO
#SBP_PATH="/usr/local/opt/sbp"
#source "${SBP_PATH}/sbp.bash"



# --------------------------------------------------------------------------------
# OS specific config
# --------------------------------------------------------------------------------
case "${OSTYPE}" in
    'darwin'*)
        export DOTFILEDIR="/Users/${USER}/repo/dotfiles"
        # shellcheck source=bash/OS/mac.sh
        source "${DOTFILEDIR}/bash/OS/mac.sh"
        ;;
    'linux-gnu'*)
        export DOTFILEDIR="/home/${USER}/repo/dotfiles"
        # shellcheck source=bash/OS/linux.sh
        source "${DOTFILEDIR}/bash/OS/linux.sh"
        ;;
    *)
        echo "Unknown OS type, defaulting to Linux setup"
        export DOTFILEDIR="/home/${USER}/repo/dotfiles"
        # shellcheck source=bash/OS/linux.sh
        source "${DOTFILEDIR}/bash/OS/linux.sh"
        ;;
esac

# --------------------------------------------------------------------------------
# Path
# --------------------------------------------------------------------------------
# Rust Cargo
export PATH="${HOME}/.cargo/bin:$PATH"
# Golang
export PATH="${PATH}:/usr/local/go/bin"
export PATH="${PATH}:${HOME}/go/bin"
# Add current directory to the end of the path
export PATH="${PATH}:."
# Brew
eval $(brew shellenv)

# Man path
export MANPATH="${MANPATH}:${HOME}/manuals"


# --------------------------------------------------------------------------------
# Source external files
# --------------------------------------------------------------------------------
#TODO: always source aliases first or remove anything that is an alias from bash_functions
# shellcheck source=bash/aliases.sh
source "${DOTFILEDIR}/bash/aliases.sh"
# shellcheck source=bash/functions.sh
source "${DOTFILEDIR}/bash/functions.sh"
# shellcheck source=bash/python.sh
source "${DOTFILEDIR}/bash/python.sh" # Python paths


# --------------------------------------------------------------------------------
# Colors - prompt, dir colors, etc
# --------------------------------------------------------------------------------
if [ "$TERM" != dumb ]; then

    # shellcheck source=bash/colors/color.sh
    source "${DOTFILEDIR}/bash/colors/color.sh"
else
    # TODO: come up with colorless alternatives for prompts
    export PS0=''    # Displayed after reading and before executing a command
    export PS1='$ '  # Default prompt
    export PS2='> '  # Interactive continuation prompt
    export PS3='#? ' # 'select' command prompt
    export PS4='+ '  # 'set +x' prefix. The first char is repeated for multiple levels of indirection
fi

#export PS0="`tput smso`below cmd output started \D{%Y} \d \T \D{%p %Z}`tput rmso`\n"
#export PS1="\[`tput smso`\]above cmd output done    \D{%Y} \d \T \D{%p %Z}\[`tput rmso`\]\n\[`tput smso`\]\u@\h:\w $MACHTYPE $PPID\[`tput rmso`\]\n\n\$ "


# --------------------------------------------------
# Pager & Editor
# --------------------------------------------------
export PAGER="less" # Set less as the default pager (like when reading man pages)
export EDITOR='vim' # Default editor


# --------------------------------------------------
# History
# --------------------------------------------------
# Store 5000 commands in history buffer
export HISTSIZE=5000

# Store 5000 commands in history FILE 
export HISTFILESIZE=5000

# Avoid duplicates in history when the same command is ran multiple times in a row
# Do not save commands prefaced by whitespace
# See man bash(1)
export HISTCONTROL='ignoreboth'

# Time stamp history
export HISTTIMEFORMAT="%d/%m/%Y %T " # [histNumber] [dd/mm/yyyy hh:mm:ss] [command]


# --------------------------------------------------
# Shopt & Set
# --------------------------------------------------
# Manually toggled
set -o vi # Vi key-binds
set -o pipefail # Pipes will fail if any fail, instead of just the last one 
shopt -s autocd # If command is the name of a directory, cd to it
shopt -s histappend # Append session history  to the history file when shell exits

# TODO: where is tab auto-complete coming from? Do we want to turn on cdspell?

# Default on
set -hmBH
shopt -s checkwinsize \
         cmdhist \
         complete_fullquote \
         expand_aliases \
         extquote \
         force_fignore \
         globasciiranges \
         hostcomplete \
         interactive_comments \
         login_shell \
         progcomp \
         promptvars \
         sourcepath

# Default off
set +abefknptuvxC # TODO: according to set's doc, "$-" shows all currently set options. Why then does it eval to 'himBHs'? The 'i' is interactive shell. Where do the 's' come from? 
shopt -u assoc_expand_once \
         cdable_vars \
         cdspell \
         checkhash \
         checkjobs \
         compat31 \
         compat32 \
         compat40 \
         compat41 \
         compat42 \
         compat43 \
         compat44 \
         direxpand \
         dirspell \
         dotglob \
         execfail \
         extdebug \
         extglob \
         failglob \
         globstar \
         gnu_errfmt \
         histreedit \
         histverify \
         huponexit \
         inherit_errexit \
         lastpipe \
         lithist \
         localvar_inherit \
         localvar_unset \
         mailwarn \
         no_empty_cmd_completion \
         nocaseglob \
         nocasematch \
         nullglob \
         progcomp_alias \
         restricted_shell \
         shift_verbose \
         xpg_echo


# --------------------------------------------------------------------------------
# Very important terminal initialization stuff
# --------------------------------------------------------------------------------
fortune | cowsay


# --------------------------------------------------------------------------------
# Shell Analytics - THIS MUST BE LAST - TODO: make a git worktree?
# --------------------------------------------------------------------------------
analyticsFile="/Users/adamgaia/repo/shellAnalytics_cpp/shellAnalytics.sh"
if [[ -e "$analyticsFile" ]]; then 
    source ${analyticsFile}
fi
