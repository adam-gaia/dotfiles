# Set prefix to ctrl-space
# unbind C-b
# set-option -g prefix C-Space

# Enable scrolling by default
set -g mouse on

# Allow vim colors to overrule tmux colors when in vim. Advised to do this to prevent color issues with vim
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# Tweaks to fix issue with tmux
# See https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
# and run ':checkhealth'
set -sg escape-time 10
set -g focus-events on
set-option -sa terminal-overrides ',xterm-256color:RGB'


# Highlight color
set -g mode-style 'reverse' # TODO: alacritty's highlight inverts foreground and background color. Can this be done in tmux?

# Border over active window
set -g pane-border-style fg=white
set -g pane-active-border-style fg=blue

# Status bar on
set -g status

# Pane border status on too
set -g pane-border-status  # TODO: change the info to something better

# Grey status bar
set -g status-bg colour8

# Set status bar info display
set -g status-left '[#S] '
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online) #(battery -t -g black)  #(date '+%a %b%d %I:%M') "


# --------------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# ctrl-h/j/k/l
# See: https://github.com/christoomey/vim-tmux-navigator
# --------------------------------------------------------------
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l # VS-code syntax highlight thinks the backslash escapes the quote. One more quote in this comment puts things back to normal '

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'


# --------------------------------------------------------------
# Properly display undercurls (squiggly lines under syntax errors in vim)
# --------------------------------------------------------------
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


# --------------------------------------------------------------
# Key binds
# --------------------------------------------------------------
bind-key j run-shell '/home/sarcos/repo/scripts/tmux-popup.sh'
