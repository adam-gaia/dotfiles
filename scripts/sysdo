#!/usr/bin/env bash
set -Eeuo pipefail

THIS_PROGRAM_NAME="$(basename "$0")"

# shellcheck source=/dev/null
source nonstdlib
log::debug "test"

function print_help_message()
{
  echo "${THIS_PROGRAM_NAME}"
  echo ""
  echo "Usage:"
  echo "    ${THIS_PROGRAM_NAME} [--system <hostname>] [--user <username>]"
  echo ""
  echo "Arguments:"
  echo "    --system:  Apply system configuration (implies '--user')"
  echo "    --user:    Apply user configuration"
  echo ""
}

function apply_system() {
  sudo nixos-rebuild switch --flake .#
  systemctl -t service --state=running --no-legend --no-pager | grep -E --color=never 'podman|docker'
}

function apply_user() {
  user="$1"
  home-manager build --flake ".#${user}"
  ./result/activate

  ## Install things not yet in Nixpkgs
  # AstroNvim
  NVIM_CONFIG_DIR=${XDG_CONFIG_HOME}/nvim
  ASTRONVIM_VERSION="v1.8.0"
  if [[ ! -d "${NVIM_CONFIG_DIR}" ]]; then
    mkdir -p "${NVIM_CONFIG_DIR}"
    git clone https://github.com/AstroNvim/AstroNvim "${NVIM_CONFIG_DIR}"
    pushd "${NVIM_CONFIG_DIR}"
    git checkout "${ASTRONVIM_VERSION}"
    popd
    nvim +PackerSync
  fi
}

APPLY_SYSTEM=0
APPLY_USER=0
USER_NAME="$(whoami)"

if [[ "$#" -eq 0 ]]; then
  echo "No args specified, applying user config"
  APPLY_USER=1
fi

while [[ "$#" -gt 0 ]]; do
  arg="$1"
  case "${arg}" in
    '--help' | '-h')
      print_help_message
      exit 0
      ;; 

    '--user')
      APPLY_USER=1
      # TODO: take username and hostname as input args 
      ;;

    '--system')
       APPLY_SYSTEM=1
       APPLY_USER=1
      ;;

    *)
      echo "${THIS_PROGRAM_NAME} error: unknown arg '${arg}'"
      exit 2
    ;;

  esac
  shift # Move to next arg
done

if [[ "${APPLY_SYSTEM}" -eq 1 ]]; then
  apply_system
fi

if [[ "${APPLY_USER}" -eq 1 ]]; then
  apply_user "${USER_NAME}"
fi
